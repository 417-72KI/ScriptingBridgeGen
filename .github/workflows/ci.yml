name: CI
on:
  push:
    branches: main
    paths:
      - '**.swift'
      - '.github/workflows/ci.yml'
  pull_request: {}
concurrency:
  group: ${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  generate-matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          matrix=$(cat .github/matrix.json | jq -c .)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
  test:
    name: Test
    needs: generate-matrix
    runs-on: macOS-14
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode_version }}.app/Contents/Developer
    steps:
      - uses: actions/checkout@v4
      - name: Cache SPM build directory
        uses: actions/cache@v4
        env:
          cache-name: swiftpm
        with:
          path: .build
          key: ${{ runner.os }}-${{ github.job }}-${{ matrix.xcode_version }}-${{ env.cache-name }}-${{ hashFiles('**/Package.swift') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ matrix.xcode_version }}-${{ env.cache-name }}-
            ${{ runner.os }}-${{ github.job }}-${{ matrix.xcode_version }}-
            ${{ runner.os }}-${{ github.job }}-
            ${{ runner.os }}-
      - name: Cache Homebrew modules
        uses: actions/cache@v4
        env:
          cache-name: brew
        with:
          path: |
            ~/Library/Caches/Homebrew/downloads
          key: ${{ runner.os }}-${{ github.job }}-${{ matrix.xcode_version }}-${{ env.cache-name }}-${{ hashFiles('**/Package.swift') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ matrix.xcode_version }}-${{ env.cache-name }}-
            ${{ runner.os }}-${{ github.job }}-${{ matrix.xcode_version }}-
            ${{ runner.os }}-${{ github.job }}-
            ${{ runner.os }}-
      - name: Disable SwiftLint Plugin
        run: sed -i -e 's/.*SwiftLint.*//g' Package.swift
      - name: Install LLVM
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
        run: brew install llvm
      - name: Activate clang module
        run: |
            swift package resolve
            sudo swift .build/checkouts/ClangSwift/utils/make-pkgconfig.swift
      - name: Test
        run: swift test
