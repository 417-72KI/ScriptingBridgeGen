<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <!-- This is how we'd normally include the standard suite, but we're not doing this because we want our own pruned copy of it. -->
	<!--<xi:include href="file:///System/Library/ScriptingDefinitions/CocoaStandard.sdef" xpointer="xpointer(/dictionary/suite)"/>-->

    <!-- Xcode's copy of the standard suite, to let us hide things we don't want. -->
    <suite name="Standard Suite" code="????" description="Common classes and commands for all applications.">
        
        <command name="open" code="aevtodoc" description="Open a document.">
            <direct-parameter description="The file(s) to be opened.">
                <type type="file"/>
                <type type="file" list="yes"/>
            </direct-parameter>
            <result description="The opened document(s).">
                <type type="document"/>
                <type type="document" list="yes"/>
            </result>
            <documentation>
                <html>
                    <![CDATA[
                        <div style="margin-top:8px;background-color:#eee;padding:8px;">
                        <p>KNOWN ISSUE: The open command in Xcode sometimes fails to return the opened document. It is recommended to ignore the result of the open command and instead find the opened document in the application's documents.</p>
                        </div>
                    ]]>
                </html>
            </documentation>
        </command>
        
        <enumeration name="save options" code="savo">
            <enumerator name="yes" code="yes " description="Save the file."/>
            <enumerator name="no" code="no  " description="Do not save the file."/>
            <enumerator name="ask" code="ask " description="Ask the user whether or not to save the file."/>
        </enumeration>
        
        <command name="close" code="coreclos" description="Close a document.">
            <cocoa class="NSCloseCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="the document(s) or window(s) to close."/>
            <parameter name="saving" code="savo" type="save options" optional="yes" description="Should changes be saved before closing?">
                <cocoa key="SaveOptions"/>
            </parameter>
            <parameter name="saving in" code="kfil" type="file" optional="yes" description="The file in which to save the document, if so.">
                <cocoa key="File"/>
            </parameter>
        </command>
        
        <command name="quit" code="aevtquit" description="Quit the application.">
            <cocoa class="NSQuitCommand"/>
            <parameter name="saving" code="savo" type="save options" optional="yes" description="Should changes be saved before quitting?">
                <cocoa key="SaveOptions"/>
            </parameter>
        </command>
        
        <command name="count" code="corecnte" description="Return the number of elements of a particular class within an object.">
            <cocoa class="NSCountCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The objects to be counted."/>
            <parameter name="each" code="kocl" type="type" optional="yes" description="The class of objects to be counted." hidden="yes">
                <cocoa key="ObjectClass"/>
            </parameter>
            <result type="integer" description="The count."/>
        </command>
        
        <command name="delete" code="coredelo" description="Delete an object.">
            <cocoa class="NSDeleteCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" description="The object(s) to delete."/>
        </command>
        
        <command name="exists" code="coredoex" description="Verify that an object exists.">
            <cocoa class="NSExistsCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="any" requires-access="r" description="The object(s) to check."/>
            <result type="boolean" description="Did the object(s) exist?"/>
        </command>
        
        <command name="make" code="corecrel" description="Create a new object.">
            <cocoa class="NSCreateCommand"/>
            <access-group identifier="*"/>
            <parameter name="new" code="kocl" type="type" description="The class of the new object.">
                <cocoa key="ObjectClass"/>
            </parameter>
            <parameter name="at" code="insh" type="location specifier" optional="yes" description="The location at which to insert the object.">
                <cocoa key="Location"/>
            </parameter>
            <parameter name="with data" code="data" type="any" optional="yes" description="The initial contents of the object.">
                <cocoa key="ObjectData"/>
            </parameter>
            <parameter name="with properties" code="prdt" type="record" optional="yes" description="The initial values for properties of the object.">
                <cocoa key="KeyDictionary"/>
            </parameter>
            <result type="specifier" description="The new object."/>
        </command>
        
        <command name="move" code="coremove" description="Move an object to a new location.">
            <cocoa class="NSMoveCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The object(s) to move."/>
            <parameter name="to" code="insh" type="location specifier" description="The new location for the object(s).">
                <cocoa key="ToLocation"/>
            </parameter>
        </command>
        
        <class name="application" code="capp" description="The application's top-level scripting object.">
            <cocoa class="NSApplication"/>
            <property name="name" code="pnam" type="text" access="r" description="The name of the application."/>
            <property name="frontmost" code="pisf" type="boolean" access="r" description="Is this the active application?">
                <cocoa key="isActive"/>
            </property>
            <property name="version" code="vers" type="text" access="r" description="The version number of the application."/>
            <element type="document">
                <cocoa key="orderedDocuments"/>
            </element>
            <element type="window" access="r">
                <cocoa key="orderedWindows"/>
            </element>
            <responds-to command="open">
                <cocoa method="handleOpenScriptCommand:"/>
            </responds-to>
            <responds-to command="quit">
                <cocoa method="handleQuitScriptCommand:"/>
            </responds-to>
            <responds-to command="create temporary debugging workspace">
                <cocoa method="sdefSupport_createTemporaryDebuggingWorkspace:"/>
            </responds-to>
        </class>
        
        <class name="document" code="docu" description="A document.">
            <cocoa class="NSDocument"/>
            <property name="name" code="pnam" type="text" access="r" description="Its name.">
                <cocoa key="displayName"/>
            </property>
            <property name="modified" code="imod" type="boolean" access="r" description="Has it been modified since the last save?">
                <cocoa key="isDocumentEdited"/>
            </property>
            <property name="file" code="file" type="file" access="r" description="Its location on disk, if it has one.">
                <cocoa key="fileURL"/>
            </property>
            <responds-to command="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
        </class>
        
        <class name="window" code="cwin" description="A window.">
            <cocoa class="NSWindow"/>
            <property name="name" code="pnam" type="text" access="r" description="The title of the window.">
                <cocoa key="title"/>
            </property>
            <property name="id" code="ID  " type="integer" access="r" description="The unique identifier of the window.">
                <cocoa key="uniqueID"/>
            </property>
            <property name="index" code="pidx" type="integer" description="The index of the window, ordered front to back.">
                <cocoa key="orderedIndex"/>
            </property>
            <property name="bounds" code="pbnd" type="rectangle" description="The bounding rectangle of the window.">
                <cocoa key="boundsAsQDRect"/>
            </property>
            <property name="closeable" code="hclb" type="boolean" access="r" description="Does the window have a close button?">
                <cocoa key="hasCloseBox"/>
            </property>
            <property name="miniaturizable" code="ismn" type="boolean" access="r" description="Does the window have a minimize button?">
                <cocoa key="isMiniaturizable"/>
            </property>
            <property name="miniaturized" code="pmnd" type="boolean" description="Is the window minimized right now?">
                <cocoa key="isMiniaturized"/>
            </property>
            <property name="resizable" code="prsz" type="boolean" access="r" description="Can the window be resized?">
                <cocoa key="isResizable"/>
            </property>
            <property name="visible" code="pvis" type="boolean" description="Is the window visible right now?">
                <cocoa key="isVisible"/>
            </property>
            <property name="zoomable" code="iszm" type="boolean" access="r" description="Does the window have a zoom button?">
                <cocoa key="isZoomable"/>
            </property>
            <property name="zoomed" code="pzum" type="boolean" description="Is the window zoomed right now?">
                <cocoa key="isZoomed"/>
            </property>
            <property name="document" code="docu" type="document" access="r" description="The document whose contents are displayed in the window."/>
            <responds-to command="close">
                <cocoa method="handleCloseScriptCommand:"/>
            </responds-to>
        </class>
    </suite>
    
    <suite name="Xcode Application Suite" code="pbas" description="This suite contains application-level classes and commands.">
        <class-extension extends="application" description="The Xcode application.">
            <element type="file document">
                <cocoa key="sdefSupport_fileDocuments" />
            </element>
            <element type="source document">
                <cocoa key="sdefSupport_sourceDocuments" />
            </element>
            <element type="workspace document">
                <cocoa key="sdefSupport_workspaceDocuments" />
            </element>
            <property name="active workspace document" code="awks" type="workspace document" description="The active workspace document in Xcode.">
                <cocoa key="sdefSupport_activeWorkspaceDocument" />
            </property>
        </class-extension>
        <!-- This command is used by instruments; see rdar://problem/25064100 -->
        <command name="hack" code="pbashack" description="Sets the selection to the line range of the document, and makes it visible in the graphical user interface." hidden="yes">
            <cocoa class="IDEScriptingHack" />
            <parameter name="document" code="docu" type="specifier" description="The document to display.">
                <cocoa key="document" />
            </parameter>
            <parameter name="start" code="staA" type="integer" description="The start line of the part of the document to display.">
                <cocoa key="start" />
            </parameter>
            <parameter name="stop" code="stoT" type="integer" description="The stop line of the part of the document to display.">
                <cocoa key="stop" />
            </parameter>
            <result description="The document.">
                <type type="document"/>
            </result>
        </command>
        
        <command name="create temporary debugging workspace" code="xcodcrtw" description="Create a new temporary debugging workspace.">
            <result type="workspace document" description="The new workspace object." />
        </command>
    </suite>
    
    <suite name="Xcode Document Suite" code="pbds" description="This suite contains any document-related classes.">
        <class-extension extends="document" description="An Xcode-compatible document.">
            <property name="path" code="ppth" type="text" description="The document's path.">
                <cocoa key="sdefSupport_path" />
            </property>
        </class-extension>
        <class name="file document" code="fild" description="A document that represents a file on disk. It also provides access to the window it appears in." inherits="document" plural="file documents">
            <cocoa class="NSDocument" />
        </class>
        <class name="text document" code="texd" description="A document that represents a text file on disk. It also provides access to the window it appears in." inherits="file document" plural="text documents">
            <cocoa class="IDEEditorDocument" />
            <property name="selected character range" code="xscr" description="The first and last character positions in the selection.">
                <cocoa key="sdefSupport_selectedCharacterRange" />
                <type type="integer" list="yes"/>
            </property>
            <property name="selected paragraph range" code="xspr" description="The first and last paragraph positions that contain the selection.">
                <cocoa key="sdefSupport_selectedParagraphRange" />
                <type type="integer" list="yes"/>
            </property>
            <property name="text" code="ctxt" type="text" description="The text of the text file referenced.">
                <cocoa key="sdefSupport_text" />
            </property>
            <property name="notifies when closing" code="wnoc" type="boolean" description="Should Xcode notify other apps when this document is closed?">
                <cocoa key="sdefSupport_notifiesWhenClosing" />
            </property>
        </class>
        <class name="source document" code="souf" description="A document that represents a source file on disk. It also provides access to the window it appears in." inherits="text document" plural="source documents">
            <cocoa class="SourceCodeDocument" />
        </class>
        <class name="workspace document" code="wksd" description="A document that represents a workspace on disk. Workspaces are the top-level container for almost all objects and commands in Xcode." inherits="document" plural="workspace documents">
            <cocoa class="IDEWorkspaceDocument" />
            <responds-to command="build">
                <cocoa method="sdefSupport_build:"/>
            </responds-to>
            <responds-to command="clean">
                <cocoa method="sdefSupport_clean:"/>
            </responds-to>
            <responds-to command="stop">
                <cocoa method="sdefSupport_stop:"/>
            </responds-to>
            <responds-to command="run">
                <cocoa method="sdefSupport_run:"/>
            </responds-to>
            <responds-to command="test">
                <cocoa method="sdefSupport_test:"/>
            </responds-to>
            <responds-to command="attach">
                <cocoa method="sdefSupport_attach:"/>
            </responds-to>
            <responds-to command="debug">
                <cocoa method="sdefSupport_debug:"/>
            </responds-to>
            <element type="project">
                <cocoa key="sdefSupport_projects" />
            </element>
            <element type="scheme">
                <cocoa key="sdefSupport_schemes" />
            </element>
            <element type="run destination">
                <cocoa key="sdefSupport_runDestinations" />
            </element>
            <property name="loaded" code="load" type="boolean" description="Whether the workspace document has finsished loading after being opened. Messages sent to a workspace document before it has loaded will result in errors.">
                <cocoa key="sdefSupport_isLoaded" />
            </property>
            <property name="active scheme" code="arun" type="scheme" description="The workspace's scheme that will be used for scheme actions.">
                <cocoa key="sdefSupport_activeScheme" />
            </property>
            <property name="active run destination" code="arud" type="run destination" description="The workspace's run destination that will be used for scheme actions.">
                <cocoa key="sdefSupport_activeRunDestination" />
            </property>
            <property name="last scheme action result" code="lsar" type="scheme action result" description="The scheme action result for the last scheme action command issued to the workspace document.">
                <cocoa key="sdefSupport_lastSchemeActionResult" />
            </property>
            <property name="file" code="file" type="file" access="r" description="The workspace document's location on disk, if it has one.">
                <cocoa key="sdefSupport_fileURL"/>
            </property>
            <!-- We need an element here so that the lastSchemeActionResult can be looked up in it, but we don't actually want scripts to use this, so this is a hidden element.
             The reason we use an id specifier in an element (this collection) for the lastSchemeActionResult, instead of just vending the property lastSchemeActionResult, is so that you properly get an error if you try to reference it after it's been replaced by a new scheme action result, instead of silently getting the new lastSchemeActionResult. -->
            <element type="scheme action result" hidden="yes">
                <cocoa key="sdefSupport_schemeActionResults" />
            </element>
            <documentation>
                <html>
                    <![CDATA[
                        <div style="margin-top:8px;background-color:#eee;padding:8px;">
                        <p>EXAMPLE SCRIPT: Open a project and wait for its workspace document to load.</p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="color: #0433ff"><b>open</b></span><span> "/Users/myuser/Desktop/MyProject.xcodeproj"</span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><b>set</b> </span><span style="color: #4f8f00">workspaceDocument</span><span> <b>to</b> </span><span style="color: #0433ff"><i>workspace document</i></span><span> "MyProject.xcodeproj"</span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="color: #5e6161">-- Wait for the workspace document to load with a 60 second timeout</span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><b>repeat</b> 120 <b>times</b></span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    </span><b>if</b> </span><span style="color: #812fdc">loaded</span> <b>of</b> <span style="color: #4f8f00">workspaceDocument</span> <span> <b>is</b> </span><span style="color: #812fdc"><i>true</i></span><span> <b>then</b></span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    </span><span style="white-space:pre">    </span><b>exit</b> <b>repeat</b></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    </span><b>end</b> <b>if</b></span</p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    </span><span style="color: #0433ff"><b>delay</b></span></span><span class="s1"> 0.5</span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><b>end</b> <b>repeat</b></span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><b>if</b> </span><span style="color: #812fdc">loaded</span> <b>of</b> <span style="color: #4f8f00">workspaceDocument</span> <span> <b>is</b> </span><span style="color: #812fdc"><i>false</i></span><span> <b>then</b></span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    </span><span style="white-space:pre">    </span><b>error</b> "Xcode workspace did not finish loading within timeout."</span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><b>end</b> <b>if</b></span></p>
                        </div>
                    ]]>
                </html>
            </documentation>
        </class>
    </suite>
    
    <suite name="Xcode Scheme Suite" code="pbss" description="This suite contains commands for scheme actions, and contains related objects.">
        <command name="build" code="xcodbuld" description="Invoke the &quot;build&quot; scheme action. This command should be sent to a workspace document. The build will be performed using the workspace document's current active scheme and active run destination. This command does not wait for the action to complete; its progress can be tracked with the returned scheme action result.">
            <direct-parameter type="specifier" description="the object for the command" />
            <result type="scheme action result" description="A result object which can be used to track the progress of this command and see its results." />
            <documentation>
                <html>
                    <![CDATA[
                        <div style="margin-top:8px;background-color:#eee;padding:8px;">
                        <p>EXAMPLE SCRIPT: Perform a build and wait for completion.</p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><b>set</b> <span style="color: #4f8f00">actionResult</span> <b>to</b> <span style="color: #0433ff"><b>build</b> <i>workspace document</i></span> 1</span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><b>repeat</b></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    <b>if</b> <span style="color: #812fdc">completed</span> <b>of</b> <span style="color: #4f8f00">actionResult</span> <b>is</b> <span style="color: #812fdc"><i>true</i></span> <b>then</b></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    <span style="white-space:pre">    <b>exit repeat</b></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    <b>end if</b></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><span style="white-space:pre">    </span><span style="color: #0433ff"><b>delay</b></span></span><span class="s1"> 0.5</span></p>
                        <p style="font-family:Verdana, sans-serif;text-indent:1.5em; margin: 0.0px 0.0px 0.0px 0.0px;"><b>end</b> <b>repeat</b></span></p>
                        </div>
                    ]]>
                </html>
            </documentation>
        </command>
        <command name="clean" code="xcodclen" description="Invoke the &quot;clean&quot; scheme action. This command should be sent to a workspace document. The clean will be performed using the workspace document's current active scheme and active run destination. This command does not wait for the action to complete; its progress can be tracked with the returned scheme action result.">
            <direct-parameter type="specifier" description="the object for the command" />
            <result type="scheme action result" description="A result object which can be used to track the progress of this command and see its results." />
        </command>
        <command name="stop" code="xcodstop" description="Stop the active scheme action, if one is running. This command should be sent to a workspace document. This command does not wait for the action to stop.">
            <direct-parameter type="specifier" description="the object for the command" />
        </command>
        <command name="run" code="xcoderun" description="Invoke the &quot;run&quot; scheme action. This command should be sent to a workspace document. The run action will be performed using the workspace document's current active scheme and active run destination. This command does not wait for the action to complete; its progress can be tracked with the returned scheme action result.">
            <direct-parameter type="specifier" description="the object for the command" />
            <parameter name="with command line arguments" code="clag" type="list of text" optional="yes" description="Additional command line arguments to pass to the action.">
                <cocoa key="CommandLineArguments" />
            </parameter>
            <parameter name="with environment variables" code="envl" type="list of environment variable" optional="yes" description="Additional environment variables to set for the action.">
                <cocoa key="EnvironmentVariables" />
            </parameter>
            <result type="scheme action result" description="A result object which can be used to track the progress of this command and see its results." />
        </command>
        <command name="test" code="xcodtest" description="Invoke the &quot;test&quot; scheme action. This command should be sent to a workspace document. The test action will be performed using the workspace document's current active scheme and active run destination. This command does not wait for the action to complete; its progress can be tracked with the returned scheme action result.">
            <direct-parameter type="specifier" description="the object for the command" />
            <parameter name="with command line arguments" code="clag" type="list of text" optional="yes" description="Additional command line arguments to pass to the action.">
                <cocoa key="CommandLineArguments" />
            </parameter>
            <parameter name="with environment variables" code="envl" type="list of environment variable" optional="yes" description="Additional environment variables to set for the action.">
                <cocoa key="EnvironmentVariables" />
            </parameter>
            <result type="scheme action result" description="A result object which can be used to track the progress of this command and see its results." />
        </command>
        <command name="attach" code="xcodattc" description="Start a new debugging session in the workspace. This command should be sent to a workspace document. This command does not wait for the action to complete.">
            <direct-parameter type="specifier" description="the object for the command" />
            <parameter name="to process identifier" code="pid " type="integer" description="The process identifier (pid) to which to attach.">
                <cocoa key="ProcessIdentifier" />
            </parameter>
            <parameter name="suspended" code="susp" type="boolean" description="Whether to start debugging in a suspended state.">
                <cocoa key="Suspended" />
            </parameter>
        </command>
        <command name="debug" code="xcoddebg" description="Start a debugging session using the &quot;run&quot; or &quot;run without building&quot; scheme action. This command should be sent to a workspace document. If no scheme is specified, the action will be performed using the workspace document's current active scheme. If no run destination is specified, the active run destination will be used. This command does not wait for the action to complete; its progress can be tracked with the returned scheme action result.">
            <direct-parameter type="specifier" description="the object for the command" />
            <parameter name="scheme" code="schm" type="text" optional="yes" description="Scheme name.">
                <cocoa key="SchemeName" />
            </parameter>
            <parameter name="run destination specifier" code="rdsp" type="text" optional="yes" description="Run destination specifier string (same as xcodebuild's -destination specifier).">
                <cocoa key="RunDestinationSpecifier" />
            </parameter>
            <parameter name="skip building" code="skbl" type="boolean" optional="yes" description="Whether to perform &quot;run without building&quot; rather than &quot;run&quot;.">
                <cocoa key="SkipBuilding" />
            </parameter>
            <parameter name="command line arguments" code="clag" type="list of text" optional="yes" description="Additional command line arguments to pass to the action.">
                <cocoa key="CommandLineArguments" />
            </parameter>
            <parameter name="environment variables" code="envl" type="list of environment variable" optional="yes" description="Additional environment variables to set for the action.">
                <cocoa key="EnvironmentVariables" />
            </parameter>
            <result type="scheme action result" description="A result object which can be used to track the progress of this command and see its results." />
        </command>
        <class name="scheme action result" code="sart" description="An object describing the result of performing a scheme action command." plural="scheme action results">
            <cocoa class="IDEScriptingSchemeActionResult" />
            <property name="id" code="ID  " type="text" access="r" description="The unique identifier for the scheme.">
                <cocoa key="scriptingID" />
            </property>
            <property name="completed" code="sarc" type="boolean" access="r" description="Whether this scheme action has completed (sucessfully or otherwise) or not.">
                <cocoa key="sdefSupport_completed" />
            </property>
            <property name="status" code="sars" type="scheme action result status" description="Indicates the status of the scheme action.">
                <cocoa key="sdefSupport_status" />
            </property>
            <property name="error message" code="sare" type="text" description="If the result's status is &quot;error occurred&quot;, this will be the error message; otherwise, this will be &quot;missing value&quot;.">
                <cocoa key="sdefSupport_errorText" />
            </property>
            <property name="build log" code="blog" type="text" description="If this scheme action performed a build, this will be the text of the build log.">
                <cocoa key="sdefSupport_buildLog" />
            </property>
            <element type="build error" access="r">
                <cocoa key="sdefSupport_buildErrors"/>
            </element>
            <element type="build warning" access="r">
                <cocoa key="sdefSupport_buildWarnings"/>
            </element>
            <element type="analyzer issue" access="r">
                <cocoa key="sdefSupport_analyzerIssues"/>
            </element>
            <element type="test failure" access="r">
                <cocoa key="sdefSupport_testFailures"/>
            </element>
        </class>
        <class name="scheme action issue" code="sais" description="An issue (like an error or warning) generated by a scheme action." plural="scheme action issues">
            <cocoa class="IDEScriptingSchemeActionIssue" />
            <property name="message" code="samt" type="text" description="The text of the issue.">
                <cocoa key="sdefSupport_message" />
            </property>
            <property name="file path" code="safp" type="text" description="The file path where the issue occurred. This may be 'missing value' if the issue is not associated with a specific source file.">
                <cocoa key="sdefSupport_filePath" />
            </property>
            <property name="starting line number" code="sasl" type="integer" description="The starting line number in the file where the issue occurred. This may be 'missing value' if the issue is not associated with a specific source file.">
                <cocoa key="sdefSupport_startingLineNumber" />
            </property>
            <property name="ending line number" code="sael" type="integer" description="The ending line number in the file where the issue occurred. This may be 'missing value' if the issue is not associated with a specific source file.">
                <cocoa key="sdefSupport_endingLineNumber" />
            </property>
            <property name="starting column number" code="sasc" type="integer" description="The starting column number in the file where the issue occurred. This may be 'missing value' if the issue is not associated with a specific source file.">
                <cocoa key="sdefSupport_startingColumnNumber" />
            </property>
            <property name="ending column number" code="saec" type="integer" description="The ending column number in the file where the issue occurred. This may be 'missing value' if the issue is not associated with a specific source file.">
                <cocoa key="sdefSupport_endingColumnNumber" />
            </property>
        </class>
        <class name="build error" code="sabe" description="An error generated by a build." plural="build errors" inherits="scheme action issue">
        </class>
        <class name="build warning" code="sabw" description="A warning generated by a build." plural="build warnings" inherits="scheme action issue">
        </class>
        <class name="analyzer issue" code="saai" description="A warning generated by the static analyzer." plural="analyzer issues" inherits="scheme action issue">
        </class>
        <class name="test failure" code="satf" description="A failure from a test." plural="test failures" inherits="scheme action issue">
            <!-- TODO: Add testCaseName property 
             -->
        </class>
        <class name="scheme" code="runx" description="A set of parameters for building, testing, launching or distributing the products of a workspace." plural="schemes">
            <cocoa class="IDESchemeWrapper" />
            <property name="name" code="pnam" type="text" access="r" description="The name of the scheme." />
            <property name="id" code="ID  " type="text" access="r" description="The unique identifier for the scheme.">
                <cocoa key="scriptingID" />
            </property>
        </class>
        <class name="run destination" code="rund" description="An object which specifies parameters such as the device and architecture for which to perform a scheme action." plural="run destinations">
            <cocoa class="IDERunDestinationWithNameAdditionWrapper" />
            <property name="name" code="pnam" type="text" access="r" description="The name of the run destination, as displayed in Xcode's interface." />
            <property name="architecture" code="arch" type="text" access="r" description="The architecture for which this run destination results in execution." />
            <property name="platform" code="plat" type="text" access="r" description="The identifier of the platform which this run destination targets, such as &quot;macosx&quot;, &quot;iphoneos&quot;, &quot;iphonesimulator&quot;, etc ." />
            <property name="device" code="rdev" type="device" access="r" description="The physical or virtual device which this run destination targets.">
                <cocoa key="targetDevice" />
            </property>
            <property name="companion device" code="cdev" type="device" access="r" description="If the run destination's device has a companion (e.g. a paired watch for a phone) which it will use, this is that device.">
                <cocoa key="targetCompanionDevice" />
            </property>
        </class>
        <class name="device" code="devc" description="A device which can be used as the target for a scheme action, as part of a run destination." plural="devices">
            <cocoa class="IDEDeviceWrapper" />
            <property name="name" code="pnam" type="text" access="r" description="The name of the device." />
            <property name="device identifier" code="dvid" type="text" access="r" description="A stable identifier for the device, as shown in Xcode's &quot;Devices&quot; window.">
                <cocoa key="deviceIdentifier" />
            </property>
            <property name="operating system version" code="osvr" type="text" access="r" description="The version of the operating system installed on the device which this run destination targets.">
                <cocoa key="operatingSystemVersion" />
            </property>
            <property name="device model" code="dvty" type="text" access="r" description="The model of device (e.g. &quot;iPad Air&quot;) which this run destination targets.">
                <cocoa key="deviceModel" />
            </property>
            <property name="generic" code="gnrc" type="boolean" access="r" description="Whether this run destination is generic instead of representing a specific device. Most destinations are not generic, but a generic destination (such as &quot;Any iOS Device&quot;) will be available for some platforms if no physical devices are connected." />
        </class>
        <enumeration name="scheme action result status" code="srs " description="The status of a scheme action result object.">
            <enumerator name="not yet started" code="srsn" description="The action has not yet started." />
            <enumerator name="running" code="srsr" description="The action is in progress." />
            <enumerator name="cancelled" code="srsc" description="The action was cancelled." />
            <enumerator name="failed" code="srsf" description="The action ran but did not complete successfully." />
            <enumerator name="error occurred" code="srse" description="The action was not able to run due to an error." />
            <enumerator name="succeeded" code="srss" description="The action succeeded." />
        </enumeration>
        <record-type  name="environment variable" code="envr">
            <property name="variable name" code="envn" type="text" description="The name of the environment variable." />
            <property name="variable value" code="envv" type="text" description="The value of the environment variable." />
        </record-type>
    </suite>
    
	<suite name="Xcode Project Suite" code="pbps" description="This suite contains all classes and commands related to Xcode&apos;s project model.">
		<class name="build configuration" code="bucf" description="A set of build settings for a target or project. Each target in a project has the same named build configurations as the project." plural="build configurations">
			<cocoa class="XCBuildConfigurationWrapper" />
			<element type="build setting" />
            <element type="resolved build setting" />
            <property name="id" code="ID  " type="text" access="r" description="The unique identifier for the build configuration.">
                <cocoa key="scriptingID" />
            </property>
            <property name="name" code="pnam" type="text" access="r" description="The name of the build configuration." />
		</class>
        <class name="project" code="proj" description="An Xcode project. Projects represent project files on disk and are always open in the context of a workspace document." plural="projects">
			<cocoa class="Xcode3ProjectWrapper" />
			<responds-to command="build">
				<cocoa method="build:"/>
			</responds-to>
			<responds-to command="clean">
				<cocoa method="clean:"/>
			</responds-to>
			<element type="build configuration" />
			<element type="target" />
            <property name="name" code="pnam" type="text" access="r" description="The name of the project" />
			<property name="id" code="ID  " type="text" access="r" description="The unique identifier for the project.">
				<cocoa key="scriptingID" />
			</property>
		</class>
        <class name="build setting" code="asbs" description="A setting that controls how products are built." plural="build settings">
            <cocoa class="PBXBuildSettingWrapper" />
            <property name="name" code="pnam" type="text" description="The unlocalized build setting name (e.g. DSTROOT)." />
            <property name="value" code="valL" type="text" description="A string value for the build setting." />
        </class>
        <class name="resolved build setting" code="asrs" description="An object that represents a resolved value for a build setting." plural="resolved build settings">
            <cocoa class="PBXResolvedBuildSettingWrapper" />
            <property name="name" code="pnam" type="text" description="The unlocalized build setting name (e.g. DSTROOT)." />
            <property name="value" code="valL" type="text" description="A string value for the build setting." />
        </class>
        <class name="target" code="tarR" description="A target is a blueprint for building a product. Targets inherit build settings from their project if not overridden in the target." plural="targets">
            <cocoa class="Xcode3TargetScriptingWrapper" />
            <element type="build configuration" />
            <property name="name" code="pnam" type="text" description="The name of this target." />
            <property name="id" code="ID  " type="text" access="r" description="The unique identifier for the target.">
                <cocoa key="scriptingID" />
            </property>
            <property name="project" code="proj" type="project" access="r" description="The project that contains this target" />
        </class>
	</suite>
</dictionary>
